apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "cloudify-manager-worker.name" . }}
  labels:
    name: {{ template "cloudify-manager-worker.name" . }}
{{ include "cloudify-manager-worker.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.config.replicas }}
  selector:
    matchLabels:
      app: {{ template "cloudify-manager-worker.name" . }}
  serviceName: {{ .Values.service.name }}
  template:
    metadata:
      labels:
        app: {{ template "cloudify-manager-worker.name" . }}
    spec:
      initContainers:
      - name: init-data
        image: {{ .Values.image.initContainer.repository }}:{{ .Values.image.initContainer.tag }}
        imagePullPolicy: {{ .Values.image.initContainer.pullPolicy }}
        {{- if .Values.image.initContainer.resources }}
        resources: {{- toYaml .Values.image.initContainer.resources | nindent 10 }}
        {{- end }}
        command:
          - /bin/sh
          - -cx
          - |
            mkdir -p /mnt/cloudify-data/ssl
            cp /tmp/ssl/* /mnt/cloudify-data/ssl
        volumeMounts:
        - name: cfy-worker-certs
          mountPath: /tmp/ssl
        - name: cloudify-data
          mountPath: /mnt/cloudify-data
      containers:
      - name: {{ template "cloudify-manager-worker.name" . }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.httpGet.path }}
            port: {{ .Values.livenessProbe.httpGet.port }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
        {{- end}}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.httpGet.path }}
            port: {{ .Values.readinessProbe.httpGet.port }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
        {{- end}}
        {{- if .Values.resources }}
        resources: {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /run
          name: run
        - mountPath: /run/lock
          name: runlock
        - name: cloudify-cfg-volume
          mountPath: /tmp/cloudify/config.yaml
          subPath: config.yaml
        {{- if .Values.licence }}
        - name: cloudify-licence-volume
          mountPath: /tmp/cloudify/cfy_licence.yaml
          subPath: cfy_licence.yaml
        {{- end}}
        - name: supervisord-volume
          mountPath: /etc/supervisord.d/starter.conf
          subPath: starter.conf
        - name: cfy-starter-volume
          mountPath: /tmp/cloudify/cfy_starter.sh
          subPath: cfy_starter.sh
        - name: before-hook-volume
          mountPath: /tmp/cloudify/before_hook.sh
          subPath: before_hook.sh
        - name: after-hook-volume
          mountPath: /tmp/cloudify/after_hook.sh
          subPath: after_hook.sh
        - name: cloudify-data
          mountPath: /mnt/cloudify-data
        {{- if .Values.okta.enabled }}
        - name: okta-license-volume
          mountPath: /mnt/cloudify-data/ssl/okta_certificate.pem
          subPath: okta_certificate.pem
        {{- end }}
        - name: stage-config-volume
          mountPath: /tmp/cloudify/config.json
          subPath: config.json
      volumes:
      - name: run
        emptyDir:
          medium: Memory
          sizeLimit: "2Gi"
      - name: runlock
        emptyDir:
          medium: Memory
          sizeLimit: "2Gi"
      - name: cloudify-cfg-volume
        configMap:
          name: cloudify-config
      {{- if .Values.licence }}
      - name: cloudify-licence-volume
        configMap:
          name: {{ .Values.licence.secretName }}
      {{- end }}
      {{- if .Values.okta.enabled }}
      - name: okta-license-volume
        configMap:
          name: {{ .Values.okta.secretName }}
      {{- end }}
      - name: stage-config-volume
        configMap:
          name: stage-config
      - name: supervisord-volume
        configMap:
          name: supervisord-config
      - name: cfy-starter-volume
        projected:
          defaultMode: 0754
          sources:
          - configMap:
              name: cfy-starter
      - name: before-hook-volume
        projected:
          defaultMode: 0754
          sources:
          - configMap:
              name: before-hook
      - name: after-hook-volume
        projected:
          defaultMode: 0754
          sources:
          - configMap:
              name: after-hook
      - name: cfy-worker-certs
        secret:
          secretName: {{ .Values.tls.secretName }}
      - name: cloudify-data
        persistentVolumeClaim:
          claimName: cfy-worker-pvc

    {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.image.pullSecrets | indent 8 }}
      {{- end }}