apiVersion: v1
kind: ConfigMap
metadata:
  name: cloudify-config
data:
  config.yaml: |
    manager:
      private_ip: {{ .Values.service.host }}.{{.Release.Namespace}}.svc.cluster.local
      public_ip: {{ .Values.service.host }}.{{.Release.Namespace}}.svc.cluster.local
      hostname: {{ .Values.service.host }}.{{.Release.Namespace}}.svc.cluster.local
      cli_local_profile_host_name: {{ .Values.config.cliLocalProfileHostName }}
      security:
        ssl_enabled: {{ .Values.config.security.sslEnabled }}
        admin_password: {{ .Values.config.security.adminPassword }}
      {{- if .Values.license }}
      cloudify_license_path: /tmp/cloudify/cfy_license.yaml
      {{- end }}

    cli:
      local_profile_host_name: {{ .Values.config.cliLocalProfileHostName }}

    rabbitmq:
      username: {{ .Values.queue.username }}
      password: {{ .Values.queue.password }}
      ca_path: {{ .Values.config.caCertPath }}
      cert_path: {{ .Values.config.tlsCertPath }}
      key_path: {{ .Values.config.tlsKeyPath }}
      is_external: true
      cluster_members:
        rabbit1:
          networks:
            default: {{ .Values.queue.host }}.{{.Release.Namespace}}.svc.cluster.local

    postgresql_client:
      {{- if .Values.db.useExternalDB }}
      host: {{ .Values.db.host }}
      {{- else }}
      host: {{ .Values.db.host }}.{{.Release.Namespace}}.svc.cluster.local
      {{- end }}
      server_db_name: {{ .Values.db.serverDBName }}
      server_username: {{ .Values.db.serverUsername }}
      server_password: {{ .Values.db.serverPassword }}
      cloudify_db_name: {{ .Values.db.cloudifyDBName }}
      cloudify_username: {{ .Values.db.cloudifyUsername }}
      cloudify_password: {{ .Values.db.cloudifyPassword }}
      {{- if .Values.db.useExternalDB }}
      ca_path: {{ .Values.config.postgresqlCaPath }}
      {{- else }}
      ca_path: {{ .Values.config.caCertPath }}
      {{- end }}
      ssl_enabled: true
      ssl_client_verification: true
    postgresql_server:
      postgres_password: {{ .Values.db.serverPassword }}
      {{- if .Values.db.useExternalDB }}
      ca_path: {{ .Values.config.postgresqlCaPath }}
      {{- else }}
      ca_path: {{ .Values.config.caCertPath }}
      cert_path: {{ .Values.config.tlsCertPath }}
      key_path: {{ .Values.config.tlsKeyPath }}
      {{- end }}

    prometheus:
      ca_path: {{ .Values.config.caCertPath }}
      cert_path: {{ .Values.config.tlsCertPath }}
      key_path: {{ .Values.config.tlsKeyPath }}
      scrape_interval: 5s

    ssl_inputs:
      postgresql_client_cert_path: {{ .Values.config.tlsCertPath }}
      postgresql_client_key_path: {{ .Values.config.tlsKeyPath }}
      {{- if .Values.db.useExternalDB }}
      postgresql_ca_cert_path: {{ .Values.config.postgresqlCaPath }}
      {{- else }}
      postgresql_ca_cert_path: {{ .Values.config.caCertPath }}
      {{- end }}
      ca_cert_path: {{ .Values.config.caCertPath }}
      internal_cert_path: {{ .Values.config.tlsCertPath }}
      internal_key_path: {{ .Values.config.tlsKeyPath }}
      external_cert_path: {{ .Values.config.tlsCertPath }}
      external_key_path: {{ .Values.config.tlsKeyPath }}
      external_ca_cert_path: {{ .Values.config.caCertPath }}

    composer:
      # If set to true, Cloudify Composer will not be installed
      skip_installation: false

    restservice:
      gunicorn:
        worker_count: {{ .Values.config.workerCount }}

    mgmtworker:
      max_workers: {{ .Values.config.mgmtWorkerCount }}

    validations:
      skip_validations: true
    
    sanity:
      skip_sanity: true

    services_to_install:
    - manager_service
    - monitoring_service

    service_management: supervisord