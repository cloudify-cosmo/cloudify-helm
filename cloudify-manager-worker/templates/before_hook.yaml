apiVersion: v1
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: before-hook
data:
  before_hook.sh: |
    #!/usr/bin/env bash
    set -eux

    FILE=/mnt/cloudify-data/init-completed
    CLOUDIFY_DATA_DIR="/mnt/cloudify-data"
    OKTA=/mnt/cloudify-data/ssl/okta_certificate.pem
    
    mkdir -p /mnt/cloudify-data/etc
    mkdir -p /mnt/cloudify-data/manager
    mkdir -p /mnt/cloudify-data/mgmtworker
    mkdir -p /mnt/cloudify-data/cloudify-composer
    mkdir -p /mnt/cloudify-data/cloudify-stage
    mkdir -p /mnt/cloudify-data/latest
    
    if [ -f "$FILE" ]; then
      echo "The Data exists on PV - creating symbolic links to files and folders on PV"
      rm -f /etc/cloudify/config.yaml
      cp -a --verbose "$CLOUDIFY_DATA_DIR/etc/config.yaml" /etc/cloudify/config.yaml

      if [ -f "$OKTA" ]; then
        mkdir -p /etc/cloudify/ssl
        ln -s --verbose "$OKTA" /etc/cloudify/ssl/okta_certificate.pem
      fi

      echo "Save latest migrations to latest folder, in case we need to apply newest DB schema for version upgrade"
      rm -rf $CLOUDIFY_DATA_DIR/latest/migrations
      cp -a --verbose  /opt/manager/resources/cloudify/migrations $CLOUDIFY_DATA_DIR/latest

      echo "Remove unused directory"
      rm -rf --verbose /opt/manager/resources
      rm -rf --verbose /opt/mgmtworker/env/plugins
      rm -rf --verbose /opt/cloudify-stage/dist/userData

      echo "Remove unused files"
      rm -f --verbose /opt/mgmtworker/work/admin_token
      rm -f --verbose /opt/manager/authorization.conf
      rm -f --verbose /opt/manager/rest-security.conf
      rm -f --verbose /opt/cloudify-composer/backend/conf/prod.json
      rm -f --verbose /opt/cloudify-composer/backend/conf/db_ca.crt
      rm -f --verbose /opt/cloudify-stage/conf/db_ca.crt
      rm -f --verbose /opt/cloudify-stage/conf/manager.json
      rm -f --verbose /opt/cloudify-stage/conf/config.json
      
      echo "Making symbolic links for files"
      ln -s --verbose "$CLOUDIFY_DATA_DIR/mgmtworker/admin_token" /opt/mgmtworker/work/admin_token
      ln -s --verbose "$CLOUDIFY_DATA_DIR/manager/authorization.conf" /opt/manager/authorization.conf
      ln -s --verbose "$CLOUDIFY_DATA_DIR/manager/rest-security.conf" /opt/manager/rest-security.conf
      ln -s --verbose "$CLOUDIFY_DATA_DIR/cloudify-composer/prod.json" /opt/cloudify-composer/backend/conf/prod.json
      ln -s --verbose "$CLOUDIFY_DATA_DIR/cloudify-composer/db_ca.crt" /opt/cloudify-composer/backend/conf/db_ca.crt
      ln -s --verbose "$CLOUDIFY_DATA_DIR/cloudify-stage/db_ca.crt" /opt/cloudify-stage/conf/db_ca.crt
      ln -s --verbose "$CLOUDIFY_DATA_DIR/cloudify-stage/manager.json" /opt/cloudify-stage/conf/manager.json
      ln -s --verbose "$CLOUDIFY_DATA_DIR/cloudify-stage/config.json" /opt/cloudify-stage/conf/config.json

      echo "Making symbolic links for directory"
      ln -s --verbose "$CLOUDIFY_DATA_DIR/manager/resources" /opt/manager/resources
      ln -s --verbose "$CLOUDIFY_DATA_DIR/mgmtworker/plugins" /opt/mgmtworker/env/plugins
      ln -s --verbose "$CLOUDIFY_DATA_DIR/cloudify-stage/userData" /opt/cloudify-stage/dist/userData

      echo "Set proper permissions for stage/composer files"
      sudo chown composer_user /opt/cloudify-composer/backend/conf/prod.json
      sudo chown stage_user /opt/cloudify-stage/conf/manager.json
      sudo chown stage_user /opt/cloudify-stage/conf/config.json
    else 
      echo "Copy config"
      rm -f /etc/cloudify/config.yaml
      cp /tmp/cloudify/config.yaml /etc/cloudify/config.yaml
      sudo chown cfyuser /etc/cloudify/config.yaml
      if [ -f "$OKTA" ]; then
        rm -f --verbose /opt/cloudify-stage/conf/config.json
        cp -a --verbose /tmp/cloudify/config.json /opt/cloudify-stage/conf/config.json
        mkdir -p /etc/cloudify/ssl
        ln -s --verbose "$OKTA" /etc/cloudify/ssl/okta_certificate.pem
      fi
    fi
