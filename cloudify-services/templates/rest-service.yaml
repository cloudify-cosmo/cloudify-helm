apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rest-service
  name: rest-service
spec:
  replicas: {{ .Values.rest_service.replicas }}
  selector:
    matchLabels:
      app: rest-service
  template:
    metadata:
      labels:
        app: rest-service
        cloudify-name: cloudify-restservice
    spec:
      initContainers:
        - name: rest-service-init
          image: {{ .Values.rest_service.image }}
          imagePullPolicy: {{ .Values.rest_service.imagePullPolicy }}
          command:
            - /usr/bin/env
            - -S
            - bash
            - -exuc
            - |
              /opt/rest-service/docker/prepare_secrets.sh
              python -m manager_rest.configure_manager --db-wait postgresql

              cd /opt/rest-service/migrations
              alembic upgrade head

              CONFIG_FILE="/tmp/config.yaml"
              echo "
              restservice:
                log:
                  level: DEBUG
              manager:
                hostname: cloudify-manager
                private_ip: ${ENTRYPOINT}
                file_server_type: s3
                prometheus_url: http://prometheus:{{ .Values.prometheus.api_port }}
              " > "${CONFIG_FILE}"

              python -m manager_rest.configure_manager -c "${CONFIG_FILE}"
          env:
            - name: ENTRYPOINT
              value: localhost
          volumeMounts:
            - mountPath: /etc/cloudify/ssl
              name: ssl
              readOnly: true
        {{ if .Values.fileserver.install }}
        - name: fileserver-create-resources-bucket
          image: {{ .Values.fileserver.client_image }}
          imagePullPolicy: {{ .Values.rest_service.imagePullPolicy }}
          args: [mb, minio/resources, --ignore-existing]
          env:
            - name: MINIO_SERVER_HOST
              value: fileserver
            - name: MINIO_SERVER_ACCESS_KEY
              value: {{ .Values.fileserver.access_key }}
            - name: MINIO_SERVER_SECRET_KEY
              value: {{ .Values.fileserver.secret_key }}
        - name: fileserver-make-resources-public
          image: {{ .Values.fileserver.client_image }}
          imagePullPolicy: {{ .Values.rest_service.imagePullPolicy }}
          args: [anonymous, set, public, minio/resources]
          env:
            - name: MINIO_SERVER_HOST
              value: fileserver
            - name: MINIO_SERVER_ACCESS_KEY
              value: {{ .Values.fileserver.access_key }}
            - name: MINIO_SERVER_SECRET_KEY
              value: {{ .Values.fileserver.secret_key }}
        {{ end }}
      containers:
        - name: rest-service
          image: {{ .Values.rest_service.image }}
          imagePullPolicy: {{ .Values.rest_service.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.rest_service.port }}
          {{- if .Values.rest_service.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.rest_service.port}}
              path: /api/v3.1/ok
            initialDelaySeconds: {{ .Values.rest_service.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.rest_service.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.rest_service.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.rest_service.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.rest_service.probes.liveness.failureThreshold }}
          {{- end }}
      restartPolicy: Always
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
        - name: ssl
          secret:
            secretName: {{ template "cloudify-services.name" . }}-certs
            optional: false
---
apiVersion: v1
kind: Service
metadata:
  name: rest-service
spec:
  ports:
    - port: {{ .Values.rest_service.port }}
  selector:
    app: rest-service
  type: ClusterIP
