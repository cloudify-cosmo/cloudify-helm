apiVersion: v1
kind: ConfigMap
metadata:
  name: mgmtworker-envvars
data:
  REST_PROTOCOL: http
  REST_HOST: cloudify-entrypoint
  REST_PORT: "80"
  COMPOSER_BACKEND_HOST: composer-backend
  COMPOSER_BACKEND_SERVICE_PORT: {{ .Values.composer_backend.port | quote }}
  STAGE_BACKEND_HOST: stage-backend
  STAGE_BACKEND_SERVICE_PORT: {{ .Values.stage_backend.port | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mgmtworker
spec:
  replicas: {{ .Values.mgmtworker.replicas }}
  selector:
    matchLabels:
      app: mgmtworker
  template:
    metadata:
      labels:
        app: mgmtworker
        cloudify-name: cloudify-mgmtworker
    spec:
      initContainers:
        - name: mgmtworker-init
          image: {{ .Values.rest_service.image }}
          imagePullPolicy: {{ .Values.rest_service.imagePullPolicy }}
          command:
            - /usr/bin/env
            - -S
            - bash
            - -exuc
            - |
              /opt/rest-service/docker/prepare_secrets.sh
              python -m manager_rest.configure_manager --rabbitmq-wait rabbitmq
              python -m manager_rest.configure_manager --db-wait postgresql
              python -m manager_rest.configure_manager --create-admin-token /opt/mgmtworker/work/admin_token
          volumeMounts:
            - mountPath: /etc/cloudify/ssl
              name: ssl
              readOnly: true
            - mountPath: /opt/mgmtworker/work
              name: workdir-volume
      containers:
        - name: mgmtworker
          image: {{ .Values.mgmtworker.image }}
          imagePullPolicy: {{ .Values.mgmtworker.imagePullPolicy }}
          envFrom:
            - configMapRef:
                name: mgmtworker-envvars
          volumeMounts:
            - mountPath: /etc/cloudify/ssl
              name: ssl
              readOnly: true
            - mountPath: /opt/mgmtworker/work
              name: workdir-volume
      restartPolicy: Always
      volumes:
        - name: ssl
          secret:
            secretName: {{ template "cloudify-services.name" . }}-certs
            optional: false
        - name: workdir-volume
          emptyDir: {}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}