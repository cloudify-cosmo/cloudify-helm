{{ if .Values.fileserver.install }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fileserver
  labels:
    app: fileserver
spec:
  replicas: {{ .Values.fileserver.replicas }}
  selector:
    matchLabels:
      app: fileserver
  template:
    metadata:
      labels:
        app: fileserver
    spec:
      containers:
        - image: {{ .Values.fileserver.image }}
          imagePullPolicy: {{ .Values.fileserver.imagePullPolicy }}
          name: fileserver
          command:
            - minio
            - server
            - /data
            - "--console-address"
            - ":{{.Values.fileserver.console_port}}"
          env:
            - name: MINIO_ROOT_USER
              value: "{{ .Values.fileserver.access_key }}"
            - name: MINIO_ROOT_PASSWORD
              value: "{{ .Values.fileserver.secret_key }}"
          ports:
            - containerPort: {{ .Values.fileserver.api_port }}
            - containerPort: {{ .Values.fileserver.console_port }}
          volumeMounts:
            - mountPath: /data
              name: fileserver-data
      restartPolicy: Always
      volumes:
        - name: fileserver-data
          persistentVolumeClaim:
            claimName: fileserver-data
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: fileserver
spec:
  ports:
    - name: api
      port: {{ .Values.fileserver.api_port }}
    - name: console
      port: {{ .Values.fileserver.console_port}}
  selector:
    app: fileserver
  type: ClusterIP
{{ end }}