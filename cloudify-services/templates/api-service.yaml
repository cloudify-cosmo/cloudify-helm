apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api-service
  name: api-service
spec:
  replicas: {{ .Values.api_service.replicas }}
  selector:
    matchLabels:
      app: api-service
  template:
    metadata:
      labels:
        app: api-service
        cloudify-name: cloudify-api
    spec:
      initContainers:
        - name: api-service-init
          image: {{ .Values.rest_service.image }}
          imagePullPolicy: {{ .Values.rest_service.imagePullPolicy }}
          command:
            - /usr/bin/env
            - -S
            - bash
            - -exuc
            - |
              /opt/rest-service/docker/prepare_secrets.sh
              python -m manager_rest.configure_manager --db-wait $POSTGRES_HOST
          env:
            {{- include "cloudify-services.postgres_env_vars" . | nindent 12 }}
            {{- include "cloudify-services.restservice_keys" . | nindent 12 }}
            - name: ENTRYPOINT
              value: localhost
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: manager-security
                  key: encryptionKey
      containers:
        - name: api-service
          image: {{ .Values.api_service.image }}
          imagePullPolicy: {{ .Values.api_service.imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
                - ALL
          env:
            {{- include "cloudify-services.postgres_env_vars" . | nindent 12 }}
            {{- include "cloudify-services.restservice_keys" . | nindent 12 }}
          ports:
            - containerPort: {{ .Values.api_service.port }}
          {{- if .Values.api_service.probes.liveness.enabled }}
          livenessProbe:
            httpGet:
              port: {{ .Values.api_service.port}}
              path: /health
            initialDelaySeconds: {{ .Values.api_service.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.api_service.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.api_service.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.api_service.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.api_service.probes.liveness.failureThreshold }}
          {{- end }}
      restartPolicy: Always
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
spec:
  ports:
    - port: {{ .Values.api_service.port }}
  selector:
    app: api-service
  type: ClusterIP
